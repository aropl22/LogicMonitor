Repository Structure
This repository is organized into two main folders based on script type:

bash
Copy
Edit
.
‚îú‚îÄ‚îÄ ps/      # PowerShell scripts
‚îú‚îÄ‚îÄ py/      # Python scripts
‚îú‚îÄ‚îÄ README.md
‚îî‚îÄ‚îÄ sdt_params.json  # Example configuration file
üîπ ps/ ‚Äì PowerShell Scripts
Contains PowerShell scripts used for interacting with the LogicMonitor API, including scheduling downtime (SDT). These scripts rely on the Logic.Monitor module and may use a JSON file for parameters.

Example: build-sdt.ps1

üîπ py/ ‚Äì Python Scripts
Includes optional helper scripts written in Python for tasks such as data manipulation, file preparation, or integration with other tools.

Example: prepare-devices.py

Organizing scripts this way keeps language-specific logic cleanly separated and easier to maintain.
Let me know if you'd like to include example content from each folder.


Getting Started
‚úÖ Prerequisites
To use the PowerShell script in this repository, you'll need:

Windows system

Python (optional, if you're using supporting Python scripts)

PowerShell 5.1+ or PowerShell Core 7+

Internet connection (to install dependencies)

üêç Installing Python on Windows
If you're running any supporting Python scripts (optional), follow these steps:

Download Python from the official website:
https://www.python.org/downloads/windows/

Run the installer. Be sure to check the box that says:
‚úÖ Add Python to PATH

Once installed, verify it by opening PowerShell and running:

powershell
Copy
Edit
python --version
üì¶ Installing LogicMonitor PowerShell Module
To use the LogicMonitor API via PowerShell, you‚Äôll need the Logic.Monitor module.

Open PowerShell as Administrator

Run the following command to install the module from the PowerShell Gallery:

powershell
Copy
Edit
Install-Module -Name Logic.Monitor -Scope CurrentUser -Force
If prompted about an untrusted repository, choose Y to confirm.

Once installed, verify the module:

powershell
Copy
Edit
Get-Command -Module Logic.Monitor
üìÅ Next Steps
After installation:

Clone or download this repository

Ensure your JSON parameter file and CSV file are in place

Open and run the script using PowerShell:

powershell
Copy
Edit
.\build-sdt.ps1
Let me know if you'd like me to add authentication instructions for LogicMonitor or how to structure the JSON/CSV files.



This repository contains scripts for automating tasks in LogicMonitor, primarily focused on scheduling downtime (SDT) for devices. It includes:

üü¶ PowerShell scripts (ps/) that interact with the LogicMonitor API using the Logic.Monitor module.

üêç Python scripts (py/) for optional data processing or support tasks.

üóÇÔ∏è Configuration files (e.g., JSON, CSV) to customize script behavior without modifying code.

These tools are designed to streamline LogicMonitor maintenance workflows, reduce manual steps, and support reusable, parameter-driven automation.








